{
	"": {
		"prefix": "dijkstra",
		"body": [
		  "const ll INF = 1e18;",
		  "vector<vector<pair<ll, ll>>> adj;",
		  "",
		  "void dijkstra(ll s, vector<ll> &d, vector<ll> &p)",
		  "{",
		  "    int n = adj.size();",
		  "    d.assign(n, INF);",
		  "    p.assign(n, -1);",
		  "",
		  "    d[s] = 0;",
		  "    using pii = pair<ll, ll>;",
		  "    priority_queue<pii, vector<pii>, greater<pii>> q;",
		  "    q.push({0, s});",
		  "    while (!q.empty())",
		  "    {",
		  "        ll v = q.top().second;",
		  "        ll d_v = q.top().first;",
		  "        q.pop();",
		  "        if (d_v != d[v])",
		  "            continue;",
		  "",
		  "        for (auto edge : adj[v])",
		  "        {",
		  "            ll to = edge.first;",
		  "            ll len = edge.second;",
		  "",
		  "            if (d[v] + len < d[to])",
		  "            {",
		  "                d[to] = d[v] + len;",
		  "                p[to] = v;",
		  "                q.push({d[to], to});",
		  "            }",
		  "        }",
		  "    }",
		  "}"
		],
		"description": ""
	  }
}