{
	"": {
		"prefix": "sieveFactorization",
		"body": [
		  "const ll maxn = 1000000 + 1;",
		  "vector <ll> seive(maxn);",
		  "",
		  "void sievefun(){",
		  "",
		  "    seive[1] = 1;",
		  "    for(ll i = 2; i < maxn; i++){",
		  "        if(seive[i] == 0){",
		  "            seive[i] = i;",
		  "            for(ll j = i; j < maxn; j += i)",
		  "                if(seive[j] == 0) seive[j] = i;",
		  "        }",
		  "    }",
		  "",
		  "}",
		  "set <ll> getFactorization(ll x) ",
		  "{ ",
		  "    set <ll> ret; ",
		  "    while (x != 1) ",
		  "    { ",
		  "        ret.insert(seive[x]); ",
		  "        x = x / seive[x]; ",
		  "    } ",
		  "    return ret; ",
		  "} "
		],
		"description": ""
	  }
}